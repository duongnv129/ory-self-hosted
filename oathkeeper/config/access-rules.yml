# access-rules.yml

# Users API Rule
- id: "app-users-rule"
  upstream:
    url: "http://multi-tenancy-demo:9000"
    preserve_path: true
  match:
    url: "<http|https>://<.*>/users/<[^/]+><.*>"
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
  authenticators:
    - handler: cookie_session
    - handler: bearer_token
  authorizer:
    handler: allow
  mutators:
    - handler: header
      config:
        headers:
          X-User-Id: "{{ .Subject }}"
          X-User-Email: "{{ .Extra.identity.traits.email }}"
          X-User-Traits: "{{ .Extra.identity.traits | toJson }}"

# Products API Rule
- id: "app-products-rule"
  upstream:
    url: "http://multi-tenancy-demo:9000"
    preserve_path: true
  match:
    url: "<http|https>://<.*>/products/<[^/]+><.*>"
    methods:
      - GET
      - POST
      - DELETE
      - PUT
      - PATCH
  authenticators:
    - handler: cookie_session
    - handler: bearer_token
  authorizer:
    handler: remote_json
    config:
      remote: "http://keto:4466/relation-tuples/check"
      payload: |
        {
          "namespace": "default",
          "object": "product:items",
          "relation": "{{ if eq (index .MatchContext.RegexpCaptureGroups 2) "list" }}view{{ else }}{{ index .MatchContext.RegexpCaptureGroups 2 }}{{ end }}",
          "subject_id": "user:{{ print .Extra.identity.traits.email }}"
        }
  mutators:
    - handler: header
      config:
        headers:
          X-User-Id: "{{ .Subject }}"
          X-User-Email: "{{ .Extra.identity.traits.email }}"

# Categories API Rule
- id: "app-categories-rule"
  upstream:
    url: "http://multi-tenancy-demo:9000"
    preserve_path: true
  match:
    url: "<http|https>://<.*>/categories/<[^/]+><.*>"
    methods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
  authenticators:
    - handler: cookie_session
    - handler: bearer_token
  authorizer:
    handler: remote_json
    config:
      remote: "http://keto:4466/relation-tuples/check"
      payload: |
        {
          "namespace": "default",
          "object": "category:items",
          "relation": "{{ if eq (index .MatchContext.RegexpCaptureGroups 2) "list" }}view{{ else }}{{ index .MatchContext.RegexpCaptureGroups 2 }}{{ end }}",
          "subject_id": "user:{{ print .Extra.identity.traits.email }}"
        }
  mutators:
    - handler: header
      config:
        headers:
          X-User-Id: "{{ .Subject }}"
          X-User-Email: "{{ .Extra.identity.traits.email }}"

- id: "health-check-rule"
  upstream:
    url: "http://multi-tenancy-demo:9000"
  match:
    url: "<http|https>://<.*>/health"
    methods:
      - GET
  authenticators:
    - handler: anonymous
  authorizer:
    handler: allow
  mutators:
    - handler: noop
